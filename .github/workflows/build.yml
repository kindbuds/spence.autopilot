name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 20

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies and build the app for Windows
        run: |
          cd electron
          npm install
          npm run make  

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-build
          path: electron/out/make/*

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 30

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd electron
          npm install

      - name: Decode and save the certificate
        run: |
          echo "${{ secrets.MACOS_CERTIFICATE_P12_BASE64 }}" | base64 --decode > electron/developerID_application.p12

      - name: Import Apple Developer Certificate
        run: |
          security create-keychain -p actions build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p actions build.keychain
          security import electron/developerID_application.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k build.keychain

      - name: Build and Sign the App for macOS
        run: |
          cd electron
          npm run make
          codesign --deep --force --verbose --sign "Developer ID Application: Kind Buds, LLC (SRJJDF6WDH)" --entitlements=electron/entitlements.plist electron/out/make/mac/Spence AI Career Autopilot.app

      - name: Notarize the App (Optional but Recommended)
        run: |
          xcrun altool --notarize-app --primary-bundle-id "com.your.bundle.id" --username "$APPLE_ID" --password "$APPLE_APP_SPECIFIC_PASSWORD" --file electron/out/make/mac/Spence AI Career Autopilot.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-latest-build
          path: electron/out/make/*
