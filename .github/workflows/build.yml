name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    timeout-minutes: 120

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Python (macOS only)
        if: matrix.os == 'macos-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Python virtual environment (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools wheel

      - name: Install dependencies
        run: |
          cd electron
          npm install

      - name: Build Electron app
        run: |
          cd electron
          npm run make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: electron/out/make/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-build
          path: ./dist/macos

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-build
          path: ./dist/windows

      - name: List downloaded files
        run: ls -R ./dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/macos/*
            ./dist/windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
