# build.yml

name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 20

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies and build the app for Windows
        run: |
          cd electron
          npm install
          npm run make

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-build
          path: electron/out/make/*

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      CERTIFICATE_PASSWORD: D@llas45549
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: lhua-eecg-lvgg-tshh
      TEAM_ID: SRJJDF6WDH

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_15.0.app/Contents/Developer

      - name: Decode and save the certificate
        run: |
          echo "${{ secrets.MACOS_CERTIFICATE_P12_BASE64 }}" | base64 --decode > electron/developerID_application.p12

      - name: Create and unlock the keychain
        run: |
          security create-keychain -p actions build.keychain
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p actions build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security import electron/developerID_application.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k actions "/Users/runner/Library/Keychains/build.keychain-db"

      - name: Import the certificate into the keychain
        run: |
          security import electron/developerID_application.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd electron
          npm install

      # - name: Import Certs
      #   uses: apple-actions/import-codesign-certs@v2
      #   with:
      #     p12-file-base64: ${{ secrets.MACOS_CERTIFICATE_P12_BASE64 }}
      #     p12-password: $CERTIFICATE_PASSWORD

      - name: Build the App for macOS
        run: |
          cd electron
          npm run make

      - name: Sign the individual binaries
        run: |
          SIGN_ID="Developer ID Application: Kind Buds, LLC (SRJJDF6WDH)"
          APP_PATH="electron/out/make/Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.app"

          # Sign the main binary
          codesign --force --verbose --options runtime --timestamp --sign "$SIGN_ID" "$APP_PATH/Contents/MacOS/Spence-AI-Career-Autopilot"

          # Sign all frameworks
          for framework in "$APP_PATH/Contents/Frameworks/"*; do
              codesign --force --verbose --options runtime --timestamp --sign "$SIGN_ID" "$framework"
          done

      - name: Sign the entire App bundle
        run: |
          SIGN_ID="Developer ID Application: Kind Buds, LLC (SRJJDF6WDH)"
          APP_PATH="electron/out/make/Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.app"
          codesign --deep --force --verbose --options runtime --timestamp --sign "$SIGN_ID" "$APP_PATH"

      - name: Verify the Signature
        run: |
          APP_PATH="electron/out/make/Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.app"
          codesign --verify --deep --strict --verbose=2 "$APP_PATH"

      - name: Package the App
        run: |
          cd electron/out/make/
          zip -r Spence-AI-Career-Autopilot.zip Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.app

      - name: Notarize the App
        run: |
          xcrun notarytool submit electron/out/make/Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.zip --apple-id "$APPLE_ID" --password "$APPLE_APP_SPECIFIC_PASSWORD" --team-id "$TEAM_ID" --wait

      - name: Staple the Notarization Ticket
        run: |
          xcrun stapler staple electron/out/make/Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.app

      - name: Verify Stapling
        run: |
          xcrun stapler validate electron/out/make/Spence-AI-Career-Autopilot-darwin-x64/Spence-AI-Career-Autopilot.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-latest-build
          path: electron/out/make/*
