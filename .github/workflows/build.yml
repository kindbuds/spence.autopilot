name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest
    # strategy:
    #   matrix:
    #     os: [macos-latest, windows-latest]

    timeout-minutes: 20  # Increase the timeout to 20 minutes

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      # - name: Set up Python (macOS only)
      #   if: matrix.os == 'macos-latest'
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10'

      # - name: Set up Python virtual environment (macOS only)
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     python3 -m venv venv
      #     source venv/bin/activate
      #     python3 -m pip install --upgrade pip
      #     python3 -m pip install setuptools wheel

      - name: Install dependencies
        run: |
          cd electron
          npm install

      # - name: Upload .p12 file (macOS only)
      #   if: matrix.os == 'macos-latest'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: p12-file
      #     path: path/to/developerID_application.p12

      # - name: Download .p12 file (macOS only)
      #   if: matrix.os == 'macos-latest'
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: p12-file
      #     path: path/to/download

      - name: Verify GH_TOKEN is set
        run: |
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "GITHUB_TOKEN is not set"
            exit 1
          else
            echo "GITHUB_TOKEN is set"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-build
          path: electron/dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-build
          path: ./dist/windows

      - name: List downloaded files
        run: ls -R ./dist

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Publish to npm
        run: npm publish

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            # ./dist/macos/*.dmg
            ./dist/windows/squirrel.windows/x64/*.exe
            ./dist/windows/squirrel.windows/x64/latest.yml
          draft: false
          prerelease: false
